global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        option  forwardfor
        option  http-server-close
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

listen stats
	    bind :9001
	    mode http
	    stats enable
	    stats hide-version
	    stats realm HAproxy-Statistics
	    stats uri /haproxy_stats
	    stats auth username:password

frontend main_frontend
        bind *:80
        acl host_web1 hdr(host) -i blog.example.com shop.example.com
        acl host_web2 hdr(host) -i forum.example.com
        use_backend web1 if host_web1
        use_backend web2 if host_web2

backend web1
        http-request set-header X-Client-IP %[src]
        server web1 web1:80 check

backend web2
        http-request set-header X-Client-IP %[src]
        server web2 web2:4567 check
